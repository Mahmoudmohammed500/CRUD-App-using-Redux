{"version":3,"file":"static/js/365.ffc8c189.chunk.js","mappings":"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","sources":["Hooks/use-post-details.js","Pages/Edit.jsx"],"sourcesContent":["import { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { fetchpost } from \"../RTK/postslice\"\r\nimport { useParams } from \"react-router-dom\"\r\nconst  usePostDetails = () => {\r\n    const {id}= useParams() \r\n    const dispatch = useDispatch()\r\n    const { loading, error, record } = useSelector(state => state.posts)\r\n    useEffect(() => {\r\n        dispatch(fetchpost(id))\r\n    }, [dispatch, id])\r\n    return { loading, error, record };\r\n}\r\nexport default usePostDetails;","import { Button, Form } from \"react-bootstrap\";\r\nimport Loading from \"../Components/Loading\";\r\nimport usePostDetails from \"../Hooks/use-post-details\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { editpost } from \"../RTK/postslice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WithGaurd from \"../WithGaurd\";\r\nimport { useFormik } from \"formik\";\r\nimport { FormSchema } from \"../ValidationSchema\"\r\nfunction Edit() {\r\n    const { loading, error, record } = usePostDetails()\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: record ? record?.title : '',\r\n            description: record ? record?.description : '',\r\n            views: record ? record?.views : '',\r\n        },\r\n        enableReinitialize: true,\r\n        validationSchema: FormSchema,\r\n        onSubmit: values => {\r\n            const views = values.views;\r\n            const Nviews = Number(views);\r\n            const data = {\r\n                id: record?.id,\r\n                title: values.title,\r\n                views: Nviews,\r\n                description: values.description\r\n            };\r\n            dispatch(editpost(data))\r\n                .unwrap()\r\n                .then(() => {\r\n                    navigate(\"/\")\r\n                })\r\n                .catch(error => {\r\n                    // console.log(error)\r\n                })\r\n        }\r\n    });\r\n\r\n    useEffect(() => {   // This useEffect is the last block of code execute on the edit page >>\r\n        return () => {  // mean that it execute after submit data and leaving the page\r\n            dispatch({ type: \"posts/CleanRecord\" })  // to Clean Record when leave edit page\r\n        };\r\n    }, [dispatch])\r\n    return (\r\n        <>\r\n            <Form onSubmit={formik.handleSubmit}>\r\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.title}\r\n                        isInvalid={formik.touched.title && formik.errors.title}\r\n                        isValid={formik.touched.title && !formik.errors.title} />\r\n                    <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\r\n                    <Form.Control.Feedback type=\"invalid\">{formik.errors.title}</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput2\">\r\n                    <Form.Label>Views</Form.Label>\r\n                    <Form.Control\r\n                        type=\"number\"\r\n                        name=\"views\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.views}\r\n                        isInvalid={formik.touched.views && formik.errors.views}\r\n                        isValid={formik.touched.views && !formik.errors.views} />\r\n                    <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\r\n                    <Form.Control.Feedback type=\"invalid\">{formik.errors.views}</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        name=\"description\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.description}\r\n                        isInvalid={formik.touched.description && formik.errors.description}\r\n                        isValid={formik.touched.description && !formik.errors.description} />\r\n                    <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\r\n                    <Form.Control.Feedback type=\"invalid\">{formik.errors.description}</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Loading loading={loading} error={error}>\r\n                    <Button\r\n                        variant=\"primary\" className=\"d-flex ms-auto me-auto\" type='submit'>\r\n                        Submit\r\n                    </Button>\r\n                </Loading>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WithGaurd(Edit);\r\n"],"names":["usePostDetails","id","useParams","dispatch","useDispatch","loading","error","record","useSelector","state","posts","useEffect","fetchpost","WithGaurd","navigate","useNavigate","formik","useFormik","initialValues","title","description","views","enableReinitialize","validationSchema","FormSchema","onSubmit","values","Nviews","Number","data","editpost","unwrap","then","catch","type","_jsx","_Fragment","children","_jsxs","Form","handleSubmit","Group","className","controlId","Label","Control","name","onChange","handleChange","value","isInvalid","touched","errors","isValid","Feedback","as","rows","Loading","Button","variant"],"sourceRoot":""}